{"ast":null,"code":"var _jsxFileName = \"/home/ishan/dissertation/frontend/src/Recorder.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Recorder from 'recorder-js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [recorder, setRecorder] = useState(null);\n  const handleStart = () => {\n    const newRecorder = new Recorder({\n      sampleRate: 44100,\n      numChannels: 2\n    });\n    newRecorder.start().then(() => {\n      setRecorder(newRecorder);\n    });\n  };\n  const handleStop = () => {\n    recorder.stop();\n  };\n  const handleUpload = () => {\n    recorder.stop();\n    const audioBlob = recorder.getWAV();\n    console.log('audioBlob', audioBlob);\n    const formData = new FormData();\n    formData.append('audio', audioBlob, 'audio.wav');\n    fetch('http://localhost:5000/audio-upload', {\n      method: 'POST',\n      body: formData\n    }).then(response => {\n      console.log('response', response);\n      if (response.ok) {\n        return response.json();\n      } else {\n        throw new Error('Failed to upload audio');\n      }\n    }).then(data => {\n      console.log('data', data);\n    }).catch(error => {\n      console.error('Error uploading audio', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startRecording,\n      disabled: recording,\n      children: \"Start Recording\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: stopRecording,\n      disabled: !recording,\n      children: \"Stop Recording\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      disabled: audioChunksRef.current.length === 0,\n      children: \"Upload Audio\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"jMYqnaYhpN02rzgsFnCdRZdgunk=\");\n_c = App;\n;\nexport default Recorder;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Recorder","App","recorder","setRecorder","handleStart","newRecorder","sampleRate","numChannels","start","then","handleStop","stop","handleUpload","audioBlob","getWAV","console","log","formData","FormData","append","fetch","method","body","response","ok","json","Error","data","catch","error","startRecording","recording","stopRecording","audioChunksRef","current","length"],"sources":["/home/ishan/dissertation/frontend/src/Recorder.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Recorder from 'recorder-js';\n\nfunction App() {\n  const [recorder, setRecorder] = useState(null);\n\n  const handleStart = () => {\n    const newRecorder = new Recorder({\n      sampleRate: 44100,\n      numChannels: 2,\n    });\n    newRecorder.start().then(() => {\n      setRecorder(newRecorder);\n    });\n  };\n\n  const handleStop = () => {\n    recorder.stop();\n  };\n  const handleUpload = () => {\n    recorder.stop();\n    const audioBlob = recorder.getWAV();\n  \n    console.log('audioBlob', audioBlob);\n  \n    const formData = new FormData();\n    formData.append('audio', audioBlob, 'audio.wav');\n  \n    fetch('http://localhost:5000/audio-upload', {\n      method: 'POST',\n      body: formData,\n    })\n      .then(response => {\n        console.log('response', response);\n        if (response.ok) {\n          return response.json();\n        } else {\n          throw new Error('Failed to upload audio');\n        }\n      })\n      .then(data => {\n        console.log('data', data);\n      })\n      .catch(error => {\n        console.error('Error uploading audio', error);\n      });\n  }\n\n  return (\n    <div>\n      <button onClick={startRecording} disabled={recording}>Start Recording</button>\n      <button onClick={stopRecording} disabled={!recording}>Stop Recording</button>\n      <button onClick={handleUpload} disabled={audioChunksRef.current.length === 0}>Upload Audio</button>\n    </div>\n  );\n};\n\nexport default Recorder;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,aAAa;AAAC;AAEnC,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGJ,QAAQ,CAAC,IAAI,CAAC;EAE9C,MAAMK,WAAW,GAAG,MAAM;IACxB,MAAMC,WAAW,GAAG,IAAIL,QAAQ,CAAC;MAC/BM,UAAU,EAAE,KAAK;MACjBC,WAAW,EAAE;IACf,CAAC,CAAC;IACFF,WAAW,CAACG,KAAK,EAAE,CAACC,IAAI,CAAC,MAAM;MAC7BN,WAAW,CAACE,WAAW,CAAC;IAC1B,CAAC,CAAC;EACJ,CAAC;EAED,MAAMK,UAAU,GAAG,MAAM;IACvBR,QAAQ,CAACS,IAAI,EAAE;EACjB,CAAC;EACD,MAAMC,YAAY,GAAG,MAAM;IACzBV,QAAQ,CAACS,IAAI,EAAE;IACf,MAAME,SAAS,GAAGX,QAAQ,CAACY,MAAM,EAAE;IAEnCC,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEH,SAAS,CAAC;IAEnC,MAAMI,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEN,SAAS,EAAE,WAAW,CAAC;IAEhDO,KAAK,CAAC,oCAAoC,EAAE;MAC1CC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEL;IACR,CAAC,CAAC,CACCR,IAAI,CAACc,QAAQ,IAAI;MAChBR,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEO,QAAQ,CAAC;MACjC,IAAIA,QAAQ,CAACC,EAAE,EAAE;QACf,OAAOD,QAAQ,CAACE,IAAI,EAAE;MACxB,CAAC,MAAM;QACL,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;MAC3C;IACF,CAAC,CAAC,CACDjB,IAAI,CAACkB,IAAI,IAAI;MACZZ,OAAO,CAACC,GAAG,CAAC,MAAM,EAAEW,IAAI,CAAC;IAC3B,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MACdd,OAAO,CAACc,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C,CAAC,CAAC;EACN,CAAC;EAED,oBACE;IAAA,wBACE;MAAQ,OAAO,EAAEC,cAAe;MAAC,QAAQ,EAAEC,SAAU;MAAA,UAAC;IAAe;MAAA;MAAA;MAAA;IAAA,QAAS,eAC9E;MAAQ,OAAO,EAAEC,aAAc;MAAC,QAAQ,EAAE,CAACD,SAAU;MAAA,UAAC;IAAc;MAAA;MAAA;MAAA;IAAA,QAAS,eAC7E;MAAQ,OAAO,EAAEnB,YAAa;MAAC,QAAQ,EAAEqB,cAAc,CAACC,OAAO,CAACC,MAAM,KAAK,CAAE;MAAA,UAAC;IAAY;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QAC/F;AAEV;AAAC,GApDQlC,GAAG;AAAA,KAAHA,GAAG;AAoDX;AAED,eAAeD,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}