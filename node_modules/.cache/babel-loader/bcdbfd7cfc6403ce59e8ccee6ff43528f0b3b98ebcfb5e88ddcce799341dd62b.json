{"ast":null,"code":"var _jsxFileName = \"/home/ishan/dissertation/frontend/src/Staffs.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Staffs = _ref => {\n  let {\n    numLines,\n    x,\n    y,\n    width,\n    lineGap,\n    staffGap\n  } = _ref;\n  let annotations = [/*#__PURE__*/_jsxDEV(\"text\", {\n    textAnchor: \"middle\",\n    x: x - 20,\n    y: y + 5,\n    children: \"Hihat\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 7\n  }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n    textAnchor: \"middle\",\n    x: x - 20,\n    y: y + 5 + staffGap,\n    children: \"Snare\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 7\n  }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n    textAnchor: \"middle\",\n    x: x - 20,\n    y: y + 5 + staffGap * 2,\n    children: \"Kick\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 7\n  }, this)];\n  let lines = [];\n  for (let i = 0; i < numLines; i++) {\n    // Number of seconds indicator at right of each line block\n    lines.push( /*#__PURE__*/_jsxDEV(\"text\", {\n      textAnchor: \"middle\",\n      x: x + width + 10,\n      y: y + i * lineGap - 5,\n      children: [5 * (i + 1), \"s\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this));\n    // Draw the staff lines in each line block\n    lines.push( /*#__PURE__*/_jsxDEV(\"line\", {\n      x1: x,\n      y1: y + i * lineGap,\n      x2: x + width,\n      y2: y + i * lineGap,\n      stroke: \"black\",\n      strokeWidth: \"2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this));\n    lines.push( /*#__PURE__*/_jsxDEV(\"line\", {\n      x1: x,\n      y1: y + i * lineGap + staffGap,\n      x2: x + width,\n      y2: y + i * lineGap + staffGap,\n      stroke: \"black\",\n      strokeWidth: \"2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }, this));\n    lines.push( /*#__PURE__*/_jsxDEV(\"line\", {\n      x1: x,\n      y1: y + i * lineGap + staffGap * 2,\n      x2: x + width,\n      y2: y + i * lineGap + staffGap * 2,\n      stroke: \"black\",\n      strokeWidth: \"2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }, this));\n  }\n\n  // Calculate the height of the SVG element\n  let height = numLines * (lineGap + staffGap * 2);\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    height: height,\n    width: \"600\",\n    children: [annotations, lines]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_c = Staffs;\nexport default Staffs;\nvar _c;\n$RefreshReg$(_c, \"Staffs\");","map":{"version":3,"names":["React","Staffs","numLines","x","y","width","lineGap","staffGap","annotations","lines","i","push","height"],"sources":["/home/ishan/dissertation/frontend/src/Staffs.js"],"sourcesContent":["import React from 'react'\n\nconst Staffs = ({numLines, x, y, width, lineGap, staffGap}) => {\n\n    let annotations = [\n      <text textAnchor=\"middle\" \n              x={x - 20} \n              y={y + 5}>Hihat</text>,\n      <text textAnchor=\"middle\" \n              x={x - 20} \n              y={y + 5 + staffGap}>Snare</text>,\n      <text textAnchor=\"middle\" \n              x={x - 20} \n              y={y + 5 + (staffGap * 2)}>Kick</text>\n    ]\n    let lines = []\n    for (let i = 0; i < numLines; i++) {\n        // Number of seconds indicator at right of each line block\n        lines.push(\n        <text textAnchor=\"middle\" \n              x={x + width + 10} \n              y={y + i * lineGap - 5}>{5 * (i+1)}s</text>\n        )\n        // Draw the staff lines in each line block\n        lines.push(\n        <line x1={x} y1={y + i * lineGap} \n              x2={x + width} y2={y + i * lineGap} \n              stroke=\"black\" strokeWidth=\"2\" />)\n        lines.push(\n          <line x1={x} y1={y + (i * lineGap) + staffGap} \n                x2={x + width} y2={y + (i * lineGap) + staffGap} \n                stroke=\"black\" strokeWidth=\"2\" />)\n        lines.push(\n          <line x1={x} y1={y + (i * lineGap) + (staffGap * 2)} \n                x2={x + width} y2={y + (i * lineGap) + (staffGap * 2)} \n                stroke=\"black\" strokeWidth=\"2\" />)\n    }\n\n    // Calculate the height of the SVG element\n    let height = numLines * (lineGap + staffGap * 2) \n\n  return (\n    <svg height={height} width=\"600\">\n        {annotations}\n        {lines}\n    </svg>\n  )\n}\n\nexport default Staffs"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAA;AAEzB,MAAMC,MAAM,GAAG,QAAgD;EAAA,IAA/C;IAACC,QAAQ;IAAEC,CAAC;IAAEC,CAAC;IAAEC,KAAK;IAAEC,OAAO;IAAEC;EAAQ,CAAC;EAEtD,IAAIC,WAAW,GAAG,cAChB;IAAM,UAAU,EAAC,QAAQ;IACjB,CAAC,EAAEL,CAAC,GAAG,EAAG;IACV,CAAC,EAAEC,CAAC,GAAG,CAAE;IAAA,UAAC;EAAK;IAAA;IAAA;IAAA;EAAA,QAAO,eAC9B;IAAM,UAAU,EAAC,QAAQ;IACjB,CAAC,EAAED,CAAC,GAAG,EAAG;IACV,CAAC,EAAEC,CAAC,GAAG,CAAC,GAAGG,QAAS;IAAA,UAAC;EAAK;IAAA;IAAA;IAAA;EAAA,QAAO,eACzC;IAAM,UAAU,EAAC,QAAQ;IACjB,CAAC,EAAEJ,CAAC,GAAG,EAAG;IACV,CAAC,EAAEC,CAAC,GAAG,CAAC,GAAIG,QAAQ,GAAG,CAAG;IAAA,UAAC;EAAI;IAAA;IAAA;IAAA;EAAA,QAAO,CAC/C;EACD,IAAIE,KAAK,GAAG,EAAE;EACd,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGR,QAAQ,EAAEQ,CAAC,EAAE,EAAE;IAC/B;IACAD,KAAK,CAACE,IAAI,eACV;MAAM,UAAU,EAAC,QAAQ;MACnB,CAAC,EAAER,CAAC,GAAGE,KAAK,GAAG,EAAG;MAClB,CAAC,EAAED,CAAC,GAAGM,CAAC,GAAGJ,OAAO,GAAG,CAAE;MAAA,WAAE,CAAC,IAAII,CAAC,GAAC,CAAC,CAAC,EAAC,GAAC;IAAA;MAAA;MAAA;MAAA;IAAA,QAAO,CAChD;IACD;IACAD,KAAK,CAACE,IAAI,eACV;MAAM,EAAE,EAAER,CAAE;MAAC,EAAE,EAAEC,CAAC,GAAGM,CAAC,GAAGJ,OAAQ;MAC3B,EAAE,EAAEH,CAAC,GAAGE,KAAM;MAAC,EAAE,EAAED,CAAC,GAAGM,CAAC,GAAGJ,OAAQ;MACnC,MAAM,EAAC,OAAO;MAAC,WAAW,EAAC;IAAG;MAAA;MAAA;MAAA;IAAA,QAAG,CAAC;IACxCG,KAAK,CAACE,IAAI,eACR;MAAM,EAAE,EAAER,CAAE;MAAC,EAAE,EAAEC,CAAC,GAAIM,CAAC,GAAGJ,OAAQ,GAAGC,QAAS;MACxC,EAAE,EAAEJ,CAAC,GAAGE,KAAM;MAAC,EAAE,EAAED,CAAC,GAAIM,CAAC,GAAGJ,OAAQ,GAAGC,QAAS;MAChD,MAAM,EAAC,OAAO;MAAC,WAAW,EAAC;IAAG;MAAA;MAAA;MAAA;IAAA,QAAG,CAAC;IAC1CE,KAAK,CAACE,IAAI,eACR;MAAM,EAAE,EAAER,CAAE;MAAC,EAAE,EAAEC,CAAC,GAAIM,CAAC,GAAGJ,OAAQ,GAAIC,QAAQ,GAAG,CAAG;MAC9C,EAAE,EAAEJ,CAAC,GAAGE,KAAM;MAAC,EAAE,EAAED,CAAC,GAAIM,CAAC,GAAGJ,OAAQ,GAAIC,QAAQ,GAAG,CAAG;MACtD,MAAM,EAAC,OAAO;MAAC,WAAW,EAAC;IAAG;MAAA;MAAA;MAAA;IAAA,QAAG,CAAC;EAC9C;;EAEA;EACA,IAAIK,MAAM,GAAGV,QAAQ,IAAII,OAAO,GAAGC,QAAQ,GAAG,CAAC,CAAC;EAElD,oBACE;IAAK,MAAM,EAAEK,MAAO;IAAC,KAAK,EAAC,KAAK;IAAA,WAC3BJ,WAAW,EACXC,KAAK;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEV,CAAC;AAAA,KA7CKR,MAAM;AA+CZ,eAAeA,MAAM;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}