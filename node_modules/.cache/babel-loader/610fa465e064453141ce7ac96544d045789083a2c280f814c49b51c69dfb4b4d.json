{"ast":null,"code":"var _jsxFileName = \"/home/ishan/dissertation/frontend/src/SheetDisplay.js\";\nimport OriginalPieceHit from './OriginalPieceHit';\n// import UserPieceHit from './UserPieceHit';\nimport './App.css';\nimport Staffs from './Staffs';\n\n// import sampleDrumHits from './sampleDrumHits';\nimport sampleDrumHits from './sampleDrumHits';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SheetDisplay() {\n  // preprocess the sampleDrumHits, add artificial timeDiff\n  for (let [drum, times] of Object.entries(sampleDrumHits)) {\n    sampleDrumHits[drum][\"user\"] = times[\"user\"].map(time => time + Math.random() - 0.5);\n  }\n  console.log(sampleDrumHits);\n  function getMaxTime(drumHits) {\n    let userMax = Object.keys(drumHits).map(drum => {\n      Math.max(...drumHits[drum][\"user\"]);\n    });\n    let originalMax = Object.keys(drumHits).map(drum => {\n      Math.max(drumHits[drum][\"original\"]);\n    });\n    return Math.max(...userMax, ...originalMax);\n  }\n  console.log(\"max: \" + getMaxTime(sampleDrumHits));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [\"Hello there\", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"canvas\",\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        height: \"1500\",\n        width: \"600\",\n        children: [/*#__PURE__*/_jsxDEV(Staffs, {\n          numLines: 4,\n          x: 50,\n          y: 100,\n          width: 500,\n          lineGap: 180,\n          staffGap: 40\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(OriginalPieceHit, {\n          instrument: \"hihat\",\n          time: 13,\n          xRoot: 50,\n          yRoot: 100,\n          staffWidth: 500,\n          lineGap: 180,\n          staffGap: 40\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_c = SheetDisplay;\nexport default SheetDisplay;\nvar _c;\n$RefreshReg$(_c, \"SheetDisplay\");","map":{"version":3,"names":["OriginalPieceHit","Staffs","sampleDrumHits","SheetDisplay","drum","times","Object","entries","map","time","Math","random","console","log","getMaxTime","drumHits","userMax","keys","max","originalMax"],"sources":["/home/ishan/dissertation/frontend/src/SheetDisplay.js"],"sourcesContent":["\nimport OriginalPieceHit from './OriginalPieceHit';\n// import UserPieceHit from './UserPieceHit';\nimport './App.css';\nimport Staffs from './Staffs';\n\n// import sampleDrumHits from './sampleDrumHits';\nimport sampleDrumHits from './sampleDrumHits';\n\n\nfunction SheetDisplay() {\n\n  // preprocess the sampleDrumHits, add artificial timeDiff\n  for (let [drum, times] of Object.entries(sampleDrumHits)) {\n    sampleDrumHits[drum][\"user\"] = times[\"user\"].map(time => time + Math.random() - 0.5)\n  }\n\n  console.log(sampleDrumHits)\n\n  function getMaxTime(drumHits) {\n    let userMax = Object.keys(drumHits).map(drum => {\n      Math.max(...drumHits[drum][\"user\"])\n    })\n\n    let originalMax = Object.keys(drumHits).map(drum => {\n      Math.max(drumHits[drum][\"original\"])\n    })\n\n    return Math.max(...userMax, ...originalMax)\n  }\n\n  console.log(\"max: \" + getMaxTime(sampleDrumHits))\n\n\n  return (\n    <div className=\"App\">\n      Hello there\n      <div className=\"canvas\">\n        <svg height=\"1500\" width=\"600\">\n          <Staffs \n            numLines={4} \n            x={50} \n            y={100}\n            width={500}\n            lineGap={180}\n            staffGap={40}  />\n\n          <OriginalPieceHit\n            instrument=\"hihat\"\n            time={13}\n            xRoot={50}\n            yRoot={100}\n            staffWidth={500}\n            lineGap={180}\n            staffGap={40}\n          />\n\n          {/* <UserPieceHit\n            instrument=\"hihat\"\n            time={13}\n            timeDiff={0.01}\n            xRoot={50}\n            yRoot={100}\n            staffWidth={500}\n            lineGap={180}\n            staffGap={40}\n          /> */}\n\n        </svg>\n      </div>\n    </div>\n  );\n}\n\nexport default SheetDisplay;\n"],"mappings":";AACA,OAAOA,gBAAgB,MAAM,oBAAoB;AACjD;AACA,OAAO,WAAW;AAClB,OAAOC,MAAM,MAAM,UAAU;;AAE7B;AACA,OAAOC,cAAc,MAAM,kBAAkB;AAAC;AAG9C,SAASC,YAAY,GAAG;EAEtB;EACA,KAAK,IAAI,CAACC,IAAI,EAAEC,KAAK,CAAC,IAAIC,MAAM,CAACC,OAAO,CAACL,cAAc,CAAC,EAAE;IACxDA,cAAc,CAACE,IAAI,CAAC,CAAC,MAAM,CAAC,GAAGC,KAAK,CAAC,MAAM,CAAC,CAACG,GAAG,CAACC,IAAI,IAAIA,IAAI,GAAGC,IAAI,CAACC,MAAM,EAAE,GAAG,GAAG,CAAC;EACtF;EAEAC,OAAO,CAACC,GAAG,CAACX,cAAc,CAAC;EAE3B,SAASY,UAAU,CAACC,QAAQ,EAAE;IAC5B,IAAIC,OAAO,GAAGV,MAAM,CAACW,IAAI,CAACF,QAAQ,CAAC,CAACP,GAAG,CAACJ,IAAI,IAAI;MAC9CM,IAAI,CAACQ,GAAG,CAAC,GAAGH,QAAQ,CAACX,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC;IACrC,CAAC,CAAC;IAEF,IAAIe,WAAW,GAAGb,MAAM,CAACW,IAAI,CAACF,QAAQ,CAAC,CAACP,GAAG,CAACJ,IAAI,IAAI;MAClDM,IAAI,CAACQ,GAAG,CAACH,QAAQ,CAACX,IAAI,CAAC,CAAC,UAAU,CAAC,CAAC;IACtC,CAAC,CAAC;IAEF,OAAOM,IAAI,CAACQ,GAAG,CAAC,GAAGF,OAAO,EAAE,GAAGG,WAAW,CAAC;EAC7C;EAEAP,OAAO,CAACC,GAAG,CAAC,OAAO,GAAGC,UAAU,CAACZ,cAAc,CAAC,CAAC;EAGjD,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,WAAC,aAEnB;MAAK,SAAS,EAAC,QAAQ;MAAA,uBACrB;QAAK,MAAM,EAAC,MAAM;QAAC,KAAK,EAAC,KAAK;QAAA,wBAC5B,QAAC,MAAM;UACL,QAAQ,EAAE,CAAE;UACZ,CAAC,EAAE,EAAG;UACN,CAAC,EAAE,GAAI;UACP,KAAK,EAAE,GAAI;UACX,OAAO,EAAE,GAAI;UACb,QAAQ,EAAE;QAAG;UAAA;UAAA;UAAA;QAAA,QAAI,eAEnB,QAAC,gBAAgB;UACf,UAAU,EAAC,OAAO;UAClB,IAAI,EAAE,EAAG;UACT,KAAK,EAAE,EAAG;UACV,KAAK,EAAE,GAAI;UACX,UAAU,EAAE,GAAI;UAChB,OAAO,EAAE,GAAI;UACb,QAAQ,EAAE;QAAG;UAAA;UAAA;UAAA;QAAA,QACb;MAAA;QAAA;QAAA;QAAA;MAAA;IAaE;MAAA;MAAA;MAAA;IAAA,QACF;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV;AAAC,KA9DQC,YAAY;AAgErB,eAAeA,YAAY;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}